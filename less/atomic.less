@import (reference) 'vars';

.border--solid {
	border-style: solid !important;
}

.border-color_default {
	border-color: @color-fg_default !important;
}

.border--default:extend(.border--solid, .border-color_default, .border-width_small all, .border-width-hover_small all, .border-radius_default all) {}

.flex-row {
	display: flex !important;
	flex-direction: row !important;
}

.flex-column {
	display: flex !important;
	flex-direction: column !important;
}

.flex-spread {
	justify-content: space-between;
}

.flex-column--align-centered {
	align-items: center;
}

.animation-init-duration {
	animation-duration: @animation-init-duration;
}

// Media-adjusted classes:
.media({
	@sizes: small medium large;
	each(@sizes, {
		.border-width_@{value} {
			@prop: 'border-width_@{value}';
			border-width: @media_vars[@@prop];
		}
		.border-width-hover_@{value} {
			&:hover, &:active {
				@prop: 'border-width-hover_@{value}';
				border-width: @media_vars[@@prop];
			}
		}
	});	

	@radii: default large;
	each(@radii, {
		.border-radius_@{value} {
			@prop: 'border-radius_@{value}';
			border-radius: @media_vars[@@prop];
		}
	});

	.padding_small {
		padding: @media_vars[@padding_small];
	}
});

// Compiles the given ruleset in each media range using the variable values defined for each media range namespace
.media(@ruleset) {
	// Default values:
	// @media_vars: @media_default;
	// @ruleset();
	// #media_default();
	// @ruleset();
	// @media_vars: undefined;

	@media all {
		@media_vars: @media_default;
		// #media_default();
		@ruleset();		
	}

	// Hi Res Mobile:
	// Select media on hi-res (DPR) combined with small device width:;
	@media (-webkit-min-device-pixel-ratio: 2) and (max-device-width: 414px) { 
		@media_vars: @media_hi-res;
		// #media_hi-res();
   		@ruleset();		
	}
}

// .hi-res-mobile(@rule) {
// 	@media (-webkit-min-device-pixel-ratio: 2.1), (min-resolution: 201.6dpi){ 
//     	@rule();
// 	}
// }
// 