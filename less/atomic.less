@import 'vars';

@transit_limit: 5;
@transit_offset: 180deg / (@transit_limit - 1);

.transit {
	display: flex;
	align-items: flex-end;
	transform-origin: left 50%;
}

.generate_transits(@count: @transit_limit) when (@count > 0) {
	.generate_transits(@count - 1);

	.transit:nth-child(@{count}) {
		transform: rotate(-@transit_offset * (@transit_limit - @count));

		.transit__inner {
		transform: rotate(@transit_offset * (@transit_limit - @count));
		}
	}
}
.generate_transits();

.flex-row {
	display: flex !important;
	flex-direction: row !important;
}

.flex-column {
	display: flex !important;
	flex-direction: column !important;
}

.flex-column--align-centered {
	align-items: center;
}

.animation-init-duration {
	animation-duration: @animation-init-duration;
}


// Compiles the given ruleset in each media range using the variable values defined for each media range namespace
.media(@ruleset) {
	// Default values:
	#media_default();
	@ruleset();

	// Hi Res:
	@media (-webkit-min-device-pixel-ratio: 2.1), (min-resolution: 201.6dpi){ 
		#media_hi-res();
   		@ruleset();		
	}
}

// .hi-res-mobile(@rule) {
// 	@media (-webkit-min-device-pixel-ratio: 2.1), (min-resolution: 201.6dpi){ 
//     	@rule();
// 	}
// }
