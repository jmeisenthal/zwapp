@import (reference) 'vars';
@import 'media';

// @fan-out_limit: 5;
// @fan-out_offset: 180deg / (@fan-out_limit - 1);

// .fan {
// 	display: flex;
// 	// display: none;
// 	align-items: flex-end;
// 	transform-origin: left 50%;
// 	bottom: 0;
// 	left: 50%;
// 	opacity: 0;

// 	&, .fan__inner {	
// 		transition-property: transform, opacity;
// 		transition-duration: 2s;
// 	}

// 	.fan--out & {
// 		opacity: 1;
// 	}
// }
@fan-out_limit: 10;
@fan-out_offset: 30deg;

.fan {
	display: flex;
	// display: none;
	align-items: flex-end;
	transform-origin: left 50%;
	bottom: 0;
	left: 50%;
	opacity: 0;
	transform: rotate(-1.5 *@fan-out_offset);

	&, .fan__inner {	
		transition-property: transform, opacity;
		transition-duration: 2s;
	}

	:not(.ajax-loading).fan--out & {
		opacity: 1;
	}
}

.generate_fans(@count: @fan-out_limit) when (@count > 0) {
	.generate_fans(@count - 1);

	@angle: @fan-out_offset * (@count + 0.5);
	:not(.ajax-loading).fan--out .fan:nth-child(@{count}) {
		transform: rotate(-@angle);

		.fan__inner {
			transform: translateX(@media_vars[@fan-radius]) rotate(@angle);
		}
	}
}
.media({
	.fan {
		.fan__inner {
			transform: translateX(@media_vars[@fan-radius]) rotate(1.5 * @fan-out_offset);
		}
	}
	.generate_fans();
});


@col_width_rule: {
		width: 100*@count/12%;
};

.generate_cols_sm(@count: 12) when (@count > 0) {
	.generate_cols_sm(@count - 1);
	.media-small({
		&--sm@{count} { @col_width_rule(); } 
		});
}

.generate_cols_md(@count: 12) when (@count > 0) {
	.generate_cols_md(@count - 1);
	.media-medium({
		&--md@{count} { @col_width_rule(); } 
		});
}

.generate_cols_lg(@count: 12) when (@count > 0) {
	.generate_cols_lg(@count - 1);
	.media-large({
		&--lg@{count} { @col_width_rule(); } 
		});
}
.row {
	&:extend(.flex-row);
	flex-wrap: wrap;
}
.col {
	&:extend(.flex-column);
	.generate_cols_sm();	
	.generate_cols_md();
	.generate_cols_lg();
}
